{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICLY","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reversed","setReversed","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA0B,WAC1BC,EAAoB,SA2BbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EA7BiB,SAACA,EAAOJ,EAAWE,GAC1C,IAAMG,EAAa,YAAOD,GAiB1B,OAfIJ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,EACKG,EAAcM,UAGhBN,EAOOO,CAAiBjB,EAAiBK,EAAWE,GAO3D,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEb,IAAcJ,EACV,kBACA,2BAENmB,QAAS,kBAAMd,EAAaL,IAP9B,iCAYA,wBACEkB,KAAK,SACLD,UACEb,IAAcH,EACV,oBACA,6BAENkB,QAAS,kBAAMd,EAAaJ,IAP9B,4BAYA,wBACEiB,KAAK,SACLD,UACEX,EACI,oBACA,6BAENa,QAAS,kBAAMZ,GAAaD,IAP9B,sBAYEF,GAAaE,IACf,wBACEY,KAAK,SACLD,UAAU,4BACVE,QAhDM,WACZZ,GAAY,GACZF,EAAa,KA2CT,sBAWF,6BACGG,EAAMY,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAoBA,aC1G9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.65c57c3b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICLY = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nconst getPreparedGoods = (goods, sortField, reversed) => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n\n  const goods = getPreparedGoods(goodsFromServer, sortField, reversed);\n\n  const reset = () => {\n    setReversed(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortField === SORT_FIELD_ALPHABETICLY\n              ? 'button is-info '\n              : 'button is-info  is-light'\n          }\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortField === SORT_FIELD_LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            reversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'\n          }\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        )\n      }\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}